Tables

CREATE TABLE [dbo].[User] (
    [user_ID]     INT           IDENTITY (1, 1) NOT NULL,
    [firstName]   VARCHAR (100) NOT NULL,
    [lastName]    VARCHAR (100) NOT NULL,
    [email]       VARCHAR (MAX) NOT NULL,
    [password]    VARCHAR (MAX) NOT NULL,
    [address]     VARCHAR (MAX) NULL,
    [phoneNumber] VARCHAR (50)  NULL,
    [isActive]    BIT           DEFAULT ((1)) NULL,
    [type]        INT           DEFAULT ((1)) NULL,
    CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED ([user_ID] ASC)
);

CREATE TABLE [dbo].[Book] (
    [book_ID]     INT            IDENTITY (1, 1) NOT NULL,
    [title]       VARCHAR (MAX)  NOT NULL,
    [author]      VARCHAR (MAX)  NOT NULL,
    [description] NVARCHAR (MAX) NOT NULL,
    [ISBN]        VARCHAR (50)   NOT NULL,
    [version]     VARCHAR (50)   NOT NULL,
    [genre]       VARCHAR (100)  NOT NULL,
    [publisher]   VARCHAR (150)  NOT NULL,
    [language]    VARCHAR (50)   NOT NULL,
    [price]       DECIMAL (5, 2) NOT NULL,
    CONSTRAINT [PK_Book] PRIMARY KEY CLUSTERED ([book_ID] ASC),
    UNIQUE NONCLUSTERED ([book_ID] ASC)
);

CREATE TABLE Orders (
    OrderId INT IDENTITY(1,1) PRIMARY KEY,
    UserId INT FOREIGN KEY REFERENCES [User](user_ID),
    OrderDate DATETIME DEFAULT GETDATE(),
    TotalAmount DECIMAL(10,2),
    Status VARCHAR(50) DEFAULT 'Pending',
    ShippingAddress VARCHAR(MAX)
);

CREATE TABLE OrderItems (
    OrderItemId INT IDENTITY(1,1) PRIMARY KEY,
    OrderId INT FOREIGN KEY REFERENCES Orders(OrderId),
    BookId INT FOREIGN KEY REFERENCES Book(book_ID),
    Quantity INT,
    Price DECIMAL(10,2)
);